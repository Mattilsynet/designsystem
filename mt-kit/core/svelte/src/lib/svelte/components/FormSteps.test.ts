import { render } from '@testing-library/svelte'
import FormSteps from './FormSteps.svelte'

describe('FormSteps', () => {
  const componentOptions = {
    completed: 0,
    steps: [
      { index: 0, show: true, label: 'Om bekymringen' },
      { index: 1, show: true, label: 'Info om deg' },
      { index: 2, show: true, label: 'Om dyrene' },
      { index: 2, show: false, label: 'Storfe' },
      { index: 2, show: false, label: 'Småfe' },
      { index: 2, show: false, label: 'Hund' },
      { index: 2, show: false, label: 'Katt' },
      { index: 7, show: true, label: 'Test' },
      { index: 8, show: true, label: 'Dokumentasjon' },
      { index: 8, show: false, label: 'Test 2' },
      { index: 10, show: true, label: 'Oppsummering' },
      { index: 11, show: true, label: 'Bekreftelse' }
    ]
  }
  test('Renders Om bekymringen', () => {
    const { getByText } = render(FormSteps, componentOptions)
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Info om deg', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 1 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Om dyrene', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 2 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Storfe', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 3 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Småfe', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 4 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Hund', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 5 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Katt', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 6 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(false)
  })

  test('Renders Test ', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 7 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(true)
    const test = getByText('Test')
    expect(test.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(test.parentElement.classList.contains('steps__complete')).toEqual(false)
  })

  test('Renders Dokumentasjon ', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 8 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(true)
    const test = getByText('Test')
    expect(test.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(test.parentElement.classList.contains('steps__complete')).toEqual(true)
    const doc = getByText('Dokumentasjon')
    expect(doc.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(doc.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
  test('Renders Test 2 ', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 9 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(true)
    const test = getByText('Test')
    expect(test.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(test.parentElement.classList.contains('steps__complete')).toEqual(true)
    const doc = getByText('Dokumentasjon')
    expect(doc.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(doc.parentElement.classList.contains('steps__complete')).toEqual(false)
  })

  test('Renders Oppsummering ', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 10 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(true)
    const test = getByText('Test')
    expect(test.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(test.parentElement.classList.contains('steps__complete')).toEqual(true)
    const doc = getByText('Dokumentasjon')
    expect(doc.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(doc.parentElement.classList.contains('steps__complete')).toEqual(true)
    const summary = getByText('Oppsummering')
    expect(summary.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(summary.parentElement.classList.contains('steps__complete')).toEqual(false)
  })

  test('Renders Bekreftelse ', () => {
    const { getByText } = render(FormSteps, { ...componentOptions, completed: 11 })
    const first = getByText('Om bekymringen')
    expect(first.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(first.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDeg = getByText('Info om deg')
    expect(omDeg.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDeg.parentElement.classList.contains('steps__complete')).toEqual(true)
    const omDyrene = getByText('Om dyrene')
    expect(omDyrene.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(omDyrene.parentElement.classList.contains('steps__complete')).toEqual(true)
    const test = getByText('Test')
    expect(test.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(test.parentElement.classList.contains('steps__complete')).toEqual(true)
    const doc = getByText('Dokumentasjon')
    expect(doc.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(doc.parentElement.classList.contains('steps__complete')).toEqual(true)
    const summary = getByText('Oppsummering')
    expect(summary.parentElement.classList.contains('steps__current')).toEqual(false)
    expect(summary.parentElement.classList.contains('steps__complete')).toEqual(true)
    const confirmation = getByText('Bekreftelse')
    expect(confirmation.parentElement.classList.contains('steps__current')).toEqual(true)
    expect(confirmation.parentElement.classList.contains('steps__complete')).toEqual(false)
  })
})
