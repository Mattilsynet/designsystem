@use '../theme' as *;

.layout-grid {
  --gap: 1rem;

  display: grid;
  gap: var(--gap);

  &--column {
    grid-auto-flow: column;
  }

  &--column-3 {
    --gap: 0;

    gap: var(--gap);
    grid-template-columns: minmax(0, 1fr);

    @media only screen and (min-width: $breakpoint-large) {
      --gap: var(--spacer-xx-small);

      gap: var(--gap);
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  &--column-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
    gap: 0;

    grid-auto-rows: min-content;

    .col-1-span-3,
    .col-1-span-4,
    .col-1-span-5,
    .col-1-span-6,
    .col-1-span-7,
    .col-1-span-8,
    .col-1-span-9,
    .col-1-span-10,
    .col-1-span-12,
    .col-2-span-4,
    .col-2-span-7,
    .col-2-span-9,
    .col-2-span-10,
    .col-3-span-6,
    .col-3-span-7,
    .col-3-span-8,
    .col-4-span-6,
    .col-4-span-7,
    .col-4-span-9,
    .col-5-span-8,
    .col-6-span-7,
    .col-7-span-5,
    .col-7-span-6,
    .col-8-span-4,
    .col-9-span-3,
    .col-10-span-2,
    .col-10-span-3 {
      grid-column: span 12;
    }

    .col-1-span-7 {
      grid-column: span 7;
    }
    .span-9-col-3-span-4 {
      grid-column: span 9;
    }

    @media only screen and (min-width: $breakpoint-large) {
      .col-1-span-3 {
        grid-column: span 3;
      }
      .col-1-span-4 {
        grid-column: span 4;
      }
      .col-1-span-5 {
        grid-column: span 5;
      }
      .col-1-span-6 {
        grid-column: span 6;
      }
      .col-1-span-7 {
        grid-column: span 7;
      }
      .col-1-span-8 {
        grid-column: span 8;
      }
      .col-1-span-9 {
        grid-column: span 9;
      }
      .col-1-span-10 {
        grid-column: 1 / span 10;
      }
      .col-1-span-12 {
        grid-column: span 12;
      }
      .col-2-span-4 {
        grid-column: 2 / span 4;
      }
      .col-2-span-7 {
        grid-column: 2 / span 7;
      }
      .col-2-span-9 {
        grid-column: 2 / span 9;
      }
      .col-2-span-10 {
        grid-column: 2 / span 10;
      }
      .span-9-col-3-span-4 {
        grid-column: 3 / span 4;
      }
      .col-3-span-6 {
        grid-column: 3 / span 6;
      }
      .col-3-span-7 {
        grid-column: 3 / span 7;
      }
      .col-3-span-8 {
        grid-column: 3 / span 8;
      }
      .col-4-span-6 {
        grid-column: 4 / span 6;
      }
      .col-4-span-7 {
        grid-column: 4 / span 7;
      }
      .col-4-span-9 {
        grid-column: 4 / span 9;
      }
      .col-5-span-8 {
        grid-column: 5 / span 8;
      }
      .col-6-span-7 {
        grid-column: 6 / span 7;
      }
      .col-7-span-5 {
        grid-column: 7 / span 5;
      }
      .col-7-span-6 {
        grid-column: 7 / span 6;
      }
      .col-8-span-4 {
        grid-column: 8 / span 4;
      }
      .col-9-span-3 {
        grid-column: 9 / span 3;
      }
      .col-10-span-2 {
        grid-column: 10 / span 2;
      }
      .col-10-span-3 {
        grid-column: 10 / span 3;
      }
    }
  }
  &.gap-small,
  .gap-medium,
  .gap-large {
    gap: 0;
  }
  @media only screen and (min-width: $breakpoint-large) {
    &.gap-small {
      gap: var(--spacer-small);
    }
    &.gap-medium {
      gap: var(--spacer-medium);
    }
    &.gap-large {
      gap: var(--spacer-xx-large);
    }
  }
  &--auto-fit {
    --min: 20ch;

    grid-template-columns: repeat(auto-fit, minmax(min(var(--min), 100%), 1fr));
  }

  &--auto-fill {
    --min: 20ch;

    grid-template-columns: repeat(auto-fill, minmax(min(var(--min), 100%), 1fr));
  }

  &--auto-fill-desktop {
    --min: 100%;
    grid-template-columns: repeat(auto-fill, minmax(min(var(--min), 100%), 1fr));

    @media only screen and (min-width: $breakpoint-large) {
      --min: 20ch;
    }
  }

  &--sidebar {
    --sidebar-max: 35ch;
    --content-min: 30ch;

    grid-template-columns:
      fit-content(var(--sidebar-max))
      minmax(min(50vw, var(--content-min)), 1fr);
  }

  &--centered {
    place-content: center;
  }

  &--stack {
    grid-template-areas: 'stack';
    place-items: center;

    > * {
      grid-area: stack;
      place-self: var(--place-self);
      align-self: var(--align-self, var(--place-self));
      justify-self: var(--justify-self, var(--place-self));
    }
  }

  &.row-gap {
    --space-section: var(--spacer-small);
    row-gap: var(--space-section);
  }
}
