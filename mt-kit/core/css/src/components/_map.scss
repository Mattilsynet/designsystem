@use '../utilities/mixins' as *;
@use '../theme' as *;

@mixin button-hover {
  &:hover {
    background-color: var(--mt-button-primary-bg-hover);
    outline: none;
  }
}
@mixin map-button {
  width: $button-min-width;
  height: $button-min-height;
  border-radius: $border-radius;
  background-color: var(--color-mt-white);
  border: $border-width-regular solid var(--ol-subtle-foreground-color);
}
@mixin map-button-focus {
  border: $border-width-large solid var(--ol-subtle-foreground-color);
}
// custom Openlayer style
.ol-viewport {
  --button-border-color: var(--color-mt-granskog-dark);
  --ol-subtle-foreground-color: var(--color-mt-granskog-dark);
  --distance-from-edge: var(--spacer-xxx-small);

  .ol-control {
    button[type='button'] {
      @include button-hover;
      @include map-button;
      color: var(--button-border-color);
      outline: none;

      margin: 0;
      position: relative;

      &:focus,
      &:focus-visible {
        @include map-button-focus;
      }
      &.ol-zoom-in {
        position: relative;
        border-bottom: none;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        &:focus {
          @include map-button-focus;
          & + button {
            &:before {
              height: 0;
            }
          }
        }
      }
      &.ol-zoom-out {
        --space-border: var(--spacer-xxx-small);
        border-top: none;
        border-top-left-radius: 0;
        border-top-right-radius: 0;

        &:before {
          content: '';
          width: calc(
            #{$button-min-width} - var(--border-width-regular) - var(--border-width-regular) - var(
                --space-border
              ) - var(--space-border)
          );
          height: $border-width-small;
          background: var(--color-mt-granskog-dark);
          position: absolute;
          top: 0;
          left: var(--space-border);
        }
        &:focus {
          @include map-button-focus;
          &:before {
            width: $button-min-width;
            height: 0;
          }
        }
      }
    }
  }
  .ol-control.ol-zoom {
    top: unset;
    left: unset;
    bottom: calc(var(--distance-from-edge) + #{$button-min-height} + var(--spacer-xxx-small));
    right: var(--distance-from-edge);
  }
  .ol-control.ol-attribution {
    right: var(--distance-from-edge);
    bottom: var(--distance-from-edge);
  }
  .ol-control.geolocation-button {
    right: var(--distance-from-edge);
    bottom: calc(
      var(--distance-from-edge) + (#{$button-min-height} * 3) + var(--spacer-xxx-small) +
        var(--spacer-xxx-small)
    );
  }
}

// END custom Openlayer style

.mt-map-wrapper {
  height: 30rem;
  width: 100%;
}
.mt-map {
  @include focus-outline();
  width: 100%;
  height: 100%;
  .ol-popup {
    background-color: var(--color-mt-white);
    color: var(--color-text);
    padding: var(--spacer-xxx-small);
    border-radius: $border-radius;
  }
  .mt-label.map-toggle-label {
    @include button-hover;
    @include map-button;
    display: grid;
    align-items: center;
    justify-items: center;
    svg {
      width: 50%;
      height: 50%;
      #tracker-inner-circle {
        fill: var(--color-mt-granskog-dark);
      }
      #tracker-outer-circle {
        stroke: var(--color-mt-granskog-dark);
      }
    }
  }
  .mt-input.map-toggle-input {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0;
    border: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
    &:checked + .mt-label.map-toggle-label {
      svg {
        #tracker-inner-circle {
          fill: #3399cc; //geolocation marker color
        }
        #tracker-outer-circle {
          stroke: #3399cc;
        }
      }
    }
    &:focus + .mt-label.map-toggle-label {
      @include map-button-focus;
    }
  }
}

.mt-link.map-skiplink {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;
  &:focus {
    @include focus-outline();
    z-index: 1;
    clip: auto;
    height: auto;
    width: auto;
    background-color: var(--color-mt-white);
    padding: var(--spacer-xxx-small);
  }
}
