$button-default-color: 'primary' !default;
$button-colors: 'error' !default;

// stylelint-disable order/properties-order
.button {
  --button-background: var(--color-#{$button-default-color});
  --button-color: var(--color-on-#{$button-default-color});
  --outline-color: transparent;
  --gap: 0.5rem;

  // Reset for links
  text-decoration: none;

  // Reset for buttons
  padding: 0.25em 1.25em;
  border: 2px solid transparent;
  font-family: inherit;
  cursor: pointer;

  // Display
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--gap);

  // Visual
  border-radius: 0.25em;
  background-color: var(--button-background);
  color: var(--button-color);

  // Size
  min-width: 10ch;
  min-height: 44px;

  // Text
  text-align: center;
  line-height: 1;
  font-weight: var(--font-weight-normal);

  // Effects
  // transition: all 180ms ease-in-out;
  transition: none 180ms ease-in-out;
  transition-property: background-color, color, border-color;

  &:focus {
    border-color: var(--button-background);
  }

  &:hover,
  &:active {
    background-color: var(--button-color);
    color: var(--button-background);
  }

  @each $color in $button-colors {
    &--#{$color} {
      --button-background: var(--color-#{$color});
      --button-color: var(--color-on-#{$color});

      &:focus {
        --outline-color: var(--color-#{$color}-50);

        box-shadow: 0 0 0 0.25rem var(--color-#{$color}-50);
      }
    }
  }
  &--primary {
    &:hover,
    &:active {
      background-color: var(--color-mt-text-dark);
      color: var(--color-mt-background);
      border-color: var(--color-mt-text-dark);
    }
    &:disabled,
    &[disabled],
    &.disabled {
      background-color: var(--color-mt-grey);
      color: var(--color-mt-background);
      border-color: var(--color-mt-grey);
    }
    &:focus {
      box-shadow: 0 0 0 0.25rem var(--color-primary-50);
    }
  }

  &--secondary {
    --button-focus-inner: var(--button-background);
    --button-focus-outer: var(--button-color);
    --color: var(--button-background);
    --background: var(--color-mt-background);

    border-color: var(--color);
    color: var(--color);
    background-color: var(--background);

    &:hover,
    &:active {
      background-color: var(--color);
      color: var(--background);
    }

    &:disabled,
    &[disabled],
    &.disabled {
      background-color: var(--color-mt-background);
      color: var(--color-mt-grey);
      border-color: var(--color-mt-grey);
    }

    &:focus {
      box-shadow: 0 0 0 0.25rem var(--color-primary-50);
    }
  }

  &__icon {
    width: 1em;
    height: 1em;
    flex-shrink: 0;
  }

  &:not(.button-icon) .button__icon {
    margin-right: 0.5em;
  }

  &-icon {
    border-radius: 50%;
    min-width: unset;
  }
  &--space-between {
    justify-content: space-between;
    text-align: left;
  }
  &--spinner {
    vertical-align: bottom;
  }
  .spinner::after {
    content: '';
    width: 17px;
    height: 17px;
    display: block;
    border-width: 1.3px;
    border-style: solid;
    border-radius: 50%;
    border-top-color: initial;
    border-bottom-color: initial;
    border-right-color: transparent;
    border-left-color: initial;
    border-image: initial;
    animation: 1s linear 0s infinite normal none running rotate;
  }

  @keyframes rotate {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
// stylelint-enable
