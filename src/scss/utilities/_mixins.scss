@use '../theme' as *;

@mixin focus-outline() {
  --outline-color: var(--color-primary-50);
  --outline-size: 2px;
  --outline-style: solid;
  --outline-offset: 0.2em;

  &.focus,
  &:focus {
    outline: var(--outline-size) var(--outline-style) var(--outline-color);
    outline-offset: var(--outline-offset);
  }

  &:focus:not(:focus-visible) {
    outline: none;
  }

  &:focus-visible {
    outline: var(--outline-size) var(--outline-style) var(--outline-color);
    outline-offset: var(--outline-offset);
  }
}

@mixin disabled {
  &:disabled,
  &[disabled],
  &.disabled {
    pointer-events: none;
    filter: none;
    opacity: 0.5;
  }
}

@mixin focus-shadow($shadow, $border) {
  &:focus {
    border-color: $border;
    box-shadow: 0 0 0 0.25rem $shadow;
  }
}

@mixin error-style {
  &.error {
    $error-focus-color: var(--color-error-50);

    border: $border-width-regular solid var(--color-error);

    &:focus {
      border-color: var(--color-error);
      outline: none;
      box-shadow: 0 0 0 0.25rem $error-focus-color;
    }
  }
}

@mixin radio-check-error-style {
  &.error {
    + label {
      color: var(--color-error);
    }
  }
}

@mixin children-spaced($spacer: $spacer-large) {
  > * + * {
    margin-top: $spacer;
  }
}

@mixin xp-html-area {
  p + p,
  ul + p,
  ol + p {
    padding-top: var(--spacer-x-small);
  }
  ul {
    padding-left: var(--spacer-large);
    li {
      line-height: 140%;
      & + li {
        margin-top: var(--spacer-xx-small);
      }
    }
  }
}
