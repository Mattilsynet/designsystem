@use '../theme' as *;
@use '../global/typography' as *;

.container {
  width: min(#{$container-width}, 95vw); //1440px - figma grid width
  margin-right: auto;
  margin-left: auto;
}

.container-full-width {
  width: 100%;
  [data-portal-region='main'] {
    gap: 0;
  }
}

[data-portal-region='main'] {
  gap: var(--spacer-medium);
}

[data-portal-component-type='layout'].bg-lighter-light-blue,
[data-portal-component-type='layout'].bg-light-beige {
  padding-top: var(--spacer-small);
  padding-bottom: var(--spacer-small);

  & + [data-portal-component-type='layout'].bg-light-beige,
  + [data-portal-component-type='layout'].bg-lighter-light-blue {
    margin-top: 0;
  }
}
[data-portal-component-type] {
  & + [data-portal-component-type] {
    margin-top: var(--spacer-medium);
  }
}

[data-portal-region='layout-col-1'] + [data-portal-region='layout-col-2'] {
  margin-top: var(--spacer-medium);
  @media only screen and (min-width: $breakpoint-large) {
    margin-top: 0;
  }
}

.layout-flex {
  --gap: 2rem;
  --wrap: wrap;

  display: flex;
  flex-wrap: var(--wrap);
  gap: var(--gap);

  &--space-between {
    justify-content: space-between;
  }
  &--centered {
    place-content: center;
  }
  &--center-vertical {
    align-items: center;
  }
  &--basis-3,
  &--basis-2 {
    > * {
      flex-basis: 100%;
    }
  }

  @media only screen and (min-width: $breakpoint-large) {
    &--basis-3 {
      > * {
        flex: 0 0 calc(33.4% - 20px);
      }
    }
    &--basis-2 {
      > * {
        flex-basis: 30rem;
      }
    }
  }
}

.layout-flex-col {
  display: flex;
  flex-direction: column;
  gap: var(--gap);

  &--x-small {
    gap: var(--spacer-xx-small);
  }
}

.self-start {
  align-self: start;
  justify-self: start;
}

.self-end {
  align-self: end;
  justify-self: end;
}

.form-layout {
  display: grid;
  grid-auto-rows: min-content;
}

.justify-content-start {
  justify-content: start;
}

.layout-full-width {
  width: 100%;
}

.inclusively-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
}
.inclusively-hidden-fixed {
  position: fixed;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
}
.inclusively-hidden-initial {
  position: initial;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
}

/*
Only use if it does NOT affect accessibility
*/
.responsive-hide {
  display: none;

  @media only screen and (min-width: $breakpoint-large) {
    display: inline-block;
  }
}

/*
Only use if it does NOT affect accessibility
*/
.responsive-show {
  display: block;

  @media only screen and (min-width: $breakpoint-large) {
    display: none;
  }
}

.visually-hidden-focusable {
  background: var(--color-primary);
  color: white;
  width: 100%;
  height: auto;
  position: fixed;
  text-align: center;
  padding: 4px;
  left: 0;

  &:not(:focus):not(:focus-within) {
    border: 0 !important;
    margin: -1px !important;
    padding: 0 !important;
    position: absolute;
    width: 1px;
    height: 1px;
    white-space: nowrap;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
  }
}

header {
  border-bottom: $border-red-regular;
}

.header {
  display: grid;
  grid-template-columns: 1fr min-content min-content min-content;
  align-items: center;

  svg {
    height: 1.8rem;
  }
  &--regular {
    height: $height-header-mobile;
  }

  @media only screen and (min-width: $breakpoint-large) {
    padding-right: var(--spacer-medium);
    padding-left: var(--spacer-medium);

    &--regular {
      height: $height-header-regular;
    }
  }
}

footer,
.footer {
  display: flex;
  flex-direction: column;
  justify-self: center;
  width: min(1440px, 95vw);
  padding: var(--spacer-small) 0;
  gap: var(--spacer-x-small);
  border-top: $border-red-regular;

  svg {
    align-self: center;
  }

  .col {
    display: flex;
    flex-basis: 0;
    flex-direction: column;
    flex-grow: 1;
    gap: var(--spacer-xx-small);

    h2,
    h3 {
      font-size: $font-size-body;
      font-weight: var(--font-weight-bold);
    }
  }

  @media only screen and (min-width: $breakpoint-large) {
    flex-direction: row;
    gap: var(--spacer-x-small);
    padding: var(--spacer-large) 0;

    svg {
      margin-top: 0;
      align-self: flex-start;
    }
  }
}
.display-none {
  display: none;
}

.float-right {
  float: right;
}
